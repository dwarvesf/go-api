basePath: /api/v1
definitions:
  Auth:
    properties:
      accessToken:
        type: string
      email:
        type: string
      id:
        type: integer
    required:
    - accessToken
    - email
    - id
    type: object
  ErrorDetail:
    properties:
      error:
        type: string
      field:
        type: string
    required:
    - error
    - field
    type: object
  ErrorResponse:
    properties:
      code:
        type: string
      error:
        type: string
      errors:
        items:
          $ref: '#/definitions/ErrorDetail'
        type: array
      traceId:
        type: string
    required:
    - code
    - error
    - traceId
    type: object
  LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  LoginResponse:
    properties:
      data:
        $ref: '#/definitions/Auth'
    type: object
  Me:
    properties:
      email:
        type: string
      id:
        type: integer
    required:
    - email
    - id
    type: object
  MeResponse:
    properties:
      data:
        $ref: '#/definitions/Me'
    type: object
  Message:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  MessageResponse:
    properties:
      data:
        $ref: '#/definitions/Message'
    type: object
  SignupRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      fullName:
        type: string
      password:
        type: string
      status:
        type: string
    required:
    - email
    - fullName
    - password
    type: object
  UpdatePasswordRequest:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  UpdateUserRequest:
    properties:
      avatar:
        type: string
      fullName:
        type: string
    type: object
  User:
    properties:
      avatar:
        type: string
      email:
        type: string
      fullName:
        type: string
      id:
        type: integer
    required:
    - avatar
    - email
    - fullName
    - id
    type: object
info:
  contact:
    email: andy@d.foundation
    name: Andy
    url: https://d.foundation
  description: This is api document for APP API project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: APP API DOCUMENT
  version: v0.0.1
paths:
  /portal/auth/login:
    post:
      consumes:
      - application/json
      description: Login to portal by email
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Login to portal
      tags:
      - Auth
  /portal/auth/signup:
    post:
      consumes:
      - application/json
      description: Signup
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Signup
      tags:
      - Auth
  /portal/me:
    get:
      consumes:
      - application/json
      description: Retrieve my information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Retrieve my information
      tags:
      - User
  /portal/users:
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: Update user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - User
  /portal/users/password:
    put:
      consumes:
      - application/json
      description: Update user's password
      parameters:
      - description: Update user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user's password
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
